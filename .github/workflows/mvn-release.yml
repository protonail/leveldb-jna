name: Publish artfiacts to Sonatype Repo

on:
  push:
    branches:
      - master
    tags:
      - v[0-9].[0-9]+.[0-9]+

jobs:
  build-native:
    runs-on: ${{ matrix.os }}
    env:
      target-path: ${{ matrix.platform }}-${{ matrix.arch }}
    strategy:
      matrix:
        platform: [linux, win32, darwin]
        arch: [x86, x86-64, aarch64]
        exclude:
          - platform: darwin
            arch: x86
          - platform: win32
            arch: aarch64
        include:
          - platform: darwin
            os: macos-latest
          - platform: linux
            os: ubuntu-20.04
          - platform: linux
            arch: aarch64
            extra-packages: gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          - platform: linux
            arch: x86
            extra-packages: gcc-multilib g++-multilib
          - platform: win32
            os: ubuntu-20.04
            extra-packages: mingw-w64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install build tools
        if: ${{ matrix.extra-packages }}
        run: sudo apt-get update && sudo apt-get install -y ${{ matrix.extra-packages }}
      - run: |
          git submodule init
          git submodule update
      - name: Build native image
        run: |
          export LEVELDB_ARCH=${{ matrix.target-path || env.target-path }}
          if [[ -f $(pwd)/toolchains/$LEVELDB_ARCH ]]; then
            export LEVELDB_TOOLCHAIN=$(pwd)/toolchains/$LEVELDB_ARCH
          fi
          ./bin/build_leveldb.sh
          ls -la vendor/leveldb/build
          ls -R leveldb-jna-native/src/main/resources
      - name: Upload native image
        uses: actions/upload-artifact@v2
        with:
          name: native-images.zip
          path: leveldb-jna-native/src/main/resources/*
  build-core:
    runs-on: ubuntu-20.04
    needs: [build-native]
    steps:
      - uses: actions/checkout@v2
      - name: Check version
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          mvn_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ${{ github.ref }}
          echo $mvn_version
          if [[ ${{github.ref}} != *"/tags/"* && $mvn_version != *"-SNAPSHOT" ]]; then
            echo Deploy will be skipped
            echo '::set-env name=SKIP_PUBLISH::true'
          fi
      - uses: actions/download-artifact@v1
        with:
          name: native-images.zip
          path: leveldb-jna-native/src/main/resources/
      - run: ls -R leveldb-jna-native/src/main/resources
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Publish Maven package
        if: ${{ !env.SKIP_PUBLISH }}
        uses: samuelmeuli/action-maven-publish@v1.4.0
        with:
          maven_goals_phases: deploy
          maven_args: -Dmaven.test.skip -pl leveldb-jna-native,leveldb-jna-core
          gpg_private_key: ${{ secrets.OSSRH_GPG_KEY_ASCII }}
          gpg_passphrase: ${{ secrets.OSSRH_GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.OSSRH_USERNAME }}
          nexus_password: ${{ secrets.OSSRH_PASSWORD }}
